// <auto-generated />
using ECommerce.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerce.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ECommerce.Server.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsAdmin = true,
                            PasswordHash = new byte[] { 202, 54, 174, 172, 252, 69, 222, 169, 90, 80, 236, 74, 8, 203, 195, 116, 88, 0, 236, 73, 114, 247, 241, 221, 113, 224, 214, 27, 235, 172, 118, 6, 47, 51, 149, 201, 168, 77, 228, 124, 176, 107, 253, 114, 247, 14, 106, 0, 58, 70, 11, 155, 185, 35, 103, 113, 223, 218, 178, 28, 114, 214, 234, 176 },
                            PasswordSalt = new byte[] { 72, 97, 168, 45, 73, 159, 30, 174, 94, 78, 244, 231, 247, 248, 52, 223, 63, 174, 174, 220, 17, 201, 217, 123, 16, 27, 234, 226, 63, 110, 211, 249, 150, 131, 148, 195, 187, 142, 2, 228, 180, 166, 120, 201, 30, 76, 249, 120, 221, 55, 221, 227, 118, 252, 112, 122, 114, 35, 211, 180, 42, 179, 186, 218, 135, 4, 104, 129, 121, 34, 199, 52, 16, 223, 188, 69, 34, 100, 28, 191, 64, 6, 123, 161, 169, 220, 233, 27, 74, 216, 108, 13, 25, 77, 235, 21, 8, 118, 44, 171, 194, 251, 189, 217, 172, 172, 245, 236, 57, 247, 190, 70, 4, 101, 100, 244, 173, 37, 85, 215, 224, 212, 141, 144, 47, 153, 242, 79 },
                            Username = "@adminUserName"
                        });
                });

            modelBuilder.Entity("ECommerce.Server.Models.ClientProduct", b =>
                {
                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ClientHas")
                        .HasColumnType("int");

                    b.HasKey("ClientId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ClientProducts");
                });

            modelBuilder.Entity("ECommerce.Server.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PiecesAvaliable")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<byte[]>("ProductImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ECommerce.Server.Models.ClientProduct", b =>
                {
                    b.HasOne("ECommerce.Server.Models.Client", "Client")
                        .WithMany("ClientProducts")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Server.Models.Product", "Product")
                        .WithMany("ClientProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ECommerce.Server.Models.Client", b =>
                {
                    b.Navigation("ClientProducts");
                });

            modelBuilder.Entity("ECommerce.Server.Models.Product", b =>
                {
                    b.Navigation("ClientProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
